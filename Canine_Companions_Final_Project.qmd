---
title: "Canine Companions: An Analysis of Dog Adoptability"
author: Tori Duckworth, Sadie Kiel, Annalise Record
format:
  html:
    toc: true
    toc-depth: 2
    embed-resources: true
    code-fold: true
---

```{r include = FALSE}
# This chunk just sets up some styling (eg: default size of our images)
knitr::opts_chunk$set(
  collapse = TRUE, 
  warning = FALSE,
  message = FALSE,
  fig.height = 3.88, 
  fig.width = 6,
  fig.align = 'center')
```



Where are dogs rescued from? What kinds of dogs are up for adoption, and what does their journey to the local shelter look like? By utilizing snapshot data collected by The Pudding from September 20th, 2019, we can take a peek into these dogs’ stories and better understand adoption demand trends. 
This data comes from an article, by Amber Thomas, from a digital journal, The Pudding. ^[https://pudding.cool/2019/10/shelters/] Thomas originally collected the information from PetFinder, an online database of adoptable pets, ^[https://www.petfinder.com/] to explore states with high homeless pet populations and those with high pet demand.

```{r}
#Importing the Data 
location_data <- read.csv("movesByLocation.csv")
travel_data <- read.csv("dogTravel.csv")
description_data <- read.csv("allDogDescriptions.csv")
```

In order to look at these trends, we utilized three different data sets. The first set stores individual entries from Petfinder, regardless of whether these dogs moved locations. Although some rescues or shelters posted litters of puppies together in a single entry, we only analyzed individual dogs’ profiles. Each profile includes information on the dog’s name, age, breed(s), sex, and contact location. The second introduces more specific information regarding dogs’ transport from state to state, comparing where a dog was found and where it moved. The final dataset, provides information on the total number of dogs in various locations, with imports and exports noted, too. While the datasets included some locations outside of the US, we only included data from the 50 US states, leaving us with a sample of 57,452 dogs. Check out a sneak peak into the data below. 

```{r}
#Libraries 
library(tidyverse)
library(ggthemes)
library(plotly)
library(leaflet)
library(tigris)
library(sf)
library(htmltools)
library(dplyr)
library(wordcloud)
library(RColorBrewer)
library(viridis)
library(knitr)

#This data.frame was used for looking at names data, and cleaned for that purpose
description_data_clean_names <- description_data %>%
  mutate(name = str_to_lower(name)) %>% #Turn all strings to lowercase 
  mutate(name = gsub('[0-9.]', '', name)) %>% #Get rid of all the numbers in the names 
  mutate(name = gsub('[^[:alnum:]]', ' ', name)) %>% #Get rid of all special characters (probably emojis or other symbols)
  mutate(name = case_when(
    str_detect(name, "aka") ~ str_extract(name, "^[a-zA-Z]+"), 
    TRUE ~ name)) %>% #Filter by aka and take first string to give dog only one name 
  mutate(name = gsub('courtesy listing', '', name)) %>% #Get rid of courtesy listing in names column 
  mutate(name = gsub('courtesy post', '', name)) %>% #Get rid of courtesy post in names column 
  mutate(name = gsub('courtesy', '', name)) %>% #Get rid of courtesy in names column
  mutate(name = gsub('zz ', '', name)) %>% #Get rid of weird zz in front of some names 
  mutate(name = gsub(' zz', '', name)) %>% #Get rid of weird zz after some names 
  #Had to do zz like that so didn't get rid of ones in the middle of names
  mutate(name = gsub('pending adoption', '', name)) %>% #Get rid of pending adoption in names column 
  mutate(name = gsub('adoption pending', '', name)) %>%
  mutate(name = gsub('off site foster', '', name )) %>% #Get rid of off site foster in names column 
  mutate(name = gsub('sponsored', '', name)) %>% #Get rid of sponsored in name column
  mutate(name = gsub("available", '', name)) %>% #Get rid of available in name column
  mutate(name = gsub("puppy", "", name)) %>% #Turn all puppy into blanks
  mutate(name = gsub("  ", '', name)) %>% #Turn all names that are double spaces to no spaces, makes filtering later easier
  filter(!str_detect(name, "&")) %>% #Get rid of rows that have 2 dogs or more, separated by and signs
  filter(!str_detect(name, " and ")) %>% #Get rid of rows that have 2 dogs or more, separated by and
  filter(!str_detect(name, ",")) %>% #Get rid of rows that have 2 dogs or more, separated by commas signs
  filter(!str_detect(name, "memory")) %>% #Get rid of rows people looking for donations/posting dead dogs
  filter(!name %in% c("foster needed", "a", "s", "", " ", "alaskan")) %>% #Filter out a couple of names
  filter(!str_detect(name, "puppies")) %>% #Get rid off all rows labeled puppies 
  filter(!str_detect(name, "ready")) %>% #Get rid of more litter entries 
  filter(!str_detect(name, "tusc")) %>% #Get rid of more litter entries
  filter(!str_detect(name, "juju")) %>% #Get rid of more litter entries
  filter(contact_country == "US")  %>% #Get only Dogs in US 
  select(-index, -species, -type.x, -type.y, -declawed, -url, -accessed, -posted, -breed_unknown, -status, -description) # #get rid of unnecessary columns
#got rid of index (not relevant to us), species, type.y and type.x (all dog), declawed (all na), url (not relevant), accessed (all the same day), posted (not interested in time + all same day), breed_unknown (all false), status (all adoptable)

#This data.frame was used for studying breeds, it was wrangled for ideal breed comparison, and breed by state. 
description_data_clean_breeds <- description_data_clean_names %>% 
  filter(! breed_primary %in% c("Terrier", "Shepherd", "Spaniel", "Cattle Dog", "Retriever", "Hound", "Sheepdog", "Spitz", "Mixed Breed")) %>%   #Remove breed entries that are too general
  separate(breed_primary, "breed_primary", sep = "/") %>%   #Keep only the first breed listed before a "/"
  filter(contact_country == "US") %>%  #Keep only dogs adoptable in the US 
  filter(contact_state != "DC") %>%  #Get rid of dogs adoptable in DC for later mapping purposes
  #Change state abbreviations to state names for later mapping purposes
  mutate(contact_state = str_replace(contact_state, "AL", "alabama")) %>% 
  mutate(contact_state = str_replace(contact_state, "AK", "alaska")) %>% 
  mutate(contact_state = str_replace(contact_state, "AZ", "arizona")) %>%
  mutate(contact_state = str_replace(contact_state, "AR", "arkansas")) %>%
  mutate(contact_state = str_replace(contact_state, "CA", "california")) %>%
  mutate(contact_state = str_replace(contact_state, "CO", "colorado")) %>%
  mutate(contact_state = str_replace(contact_state, "CT", "connecticut")) %>%
  mutate(contact_state = str_replace(contact_state, "DE", "delaware")) %>%
  mutate(contact_state = str_replace(contact_state, "FL", "florida")) %>%
  mutate(contact_state = str_replace(contact_state, "GA", "georgia")) %>%
  mutate(contact_state = str_replace(contact_state, "HI", "hawaii")) %>%
  mutate(contact_state = str_replace(contact_state, "ID", "idaho")) %>%
  mutate(contact_state = str_replace(contact_state, "IL", "illinois")) %>%
  mutate(contact_state = str_replace(contact_state, "IN", "indiana")) %>%
  mutate(contact_state = str_replace(contact_state, "IA", "iowa")) %>%
  mutate(contact_state = str_replace(contact_state, "KS", "kansas")) %>%
  mutate(contact_state = str_replace(contact_state, "KY", "kentucky")) %>%
  mutate(contact_state = str_replace(contact_state, "LA", "louisiana")) %>%
  mutate(contact_state = str_replace(contact_state, "ME", "maine")) %>%
  mutate(contact_state = str_replace(contact_state, "MD", "maryland")) %>%
  mutate(contact_state = str_replace(contact_state, "MA", "massachusetts")) %>%
  mutate(contact_state = str_replace(contact_state, "MI", "michigan")) %>%
  mutate(contact_state = str_replace(contact_state, "MN", "minnesota")) %>%
  mutate(contact_state = str_replace(contact_state, "MS", "mississippi")) %>%
  mutate(contact_state = str_replace(contact_state, "MO", "missouri")) %>%
  mutate(contact_state = str_replace(contact_state, "MT", "montana")) %>%
  mutate(contact_state = str_replace(contact_state, "NE", "nebraska")) %>%
  mutate(contact_state = str_replace(contact_state, "NV", "nevada")) %>%
  mutate(contact_state = str_replace(contact_state, "NH", "new hampshire")) %>%
  mutate(contact_state = str_replace(contact_state, "NJ", "new jersey")) %>%
  mutate(contact_state = str_replace(contact_state, "NM", "new mexico")) %>%
  mutate(contact_state = str_replace(contact_state, "NY", "new york")) %>%
  mutate(contact_state = str_replace(contact_state, "NC", "north carolina")) %>%
  mutate(contact_state = str_replace(contact_state, "ND", "north dakota")) %>%
  mutate(contact_state = str_replace(contact_state, "OH", "ohio")) %>%
  mutate(contact_state = str_replace(contact_state, "OK", "oklahoma")) %>%
  mutate(contact_state = str_replace(contact_state, "OR", "oregon")) %>%
  mutate(contact_state = str_replace(contact_state, "PA", "pennsylvania")) %>%
  mutate(contact_state = str_replace(contact_state, "RI", "rhode island")) %>%
  mutate(contact_state = str_replace(contact_state, "SC", "south carolina")) %>%
  mutate(contact_state = str_replace(contact_state, "SD", "south dakota")) %>%
  mutate(contact_state = str_replace(contact_state, "TN", "tennessee")) %>%
  mutate(contact_state = str_replace(contact_state, "TX", "texas")) %>%
  mutate(contact_state = str_replace(contact_state, "UT", "utah")) %>%
  mutate(contact_state = str_replace(contact_state, "VT", "vermont")) %>%
  mutate(contact_state = str_replace(contact_state, "VA", "virginia")) %>%
  mutate(contact_state = str_replace(contact_state, "WA", "washington")) %>%
  mutate(contact_state = str_replace(contact_state, "WV", "west virginia")) %>%
  mutate(contact_state = str_replace(contact_state, "WI", "wisconsin")) %>% 
  mutate(contact_state = str_replace(contact_state, "WY", "wyoming"))

#Cleaning the location data
location_data <- location_data %>%
  mutate(location = str_to_lower(location)) %>%
  mutate_all(~replace(.,is.na(.), 0))
```

```{r, collapse = FALSE, fig.alt = "Table that shows all the variables relating to each individual dog represented in the dataset. Shows their primary, secondary breed, if they are mixed, their color, age, sex, size, coat length, if they have been neutered, are house trained, are special needs, get along with children, other dogs, cats, their name, contact city, state, and more. This table only has the first 5 dogs in the data set, to demonstrate that they differ significanlty."}
kable(head(description_data_clean_names))
```
\
This data provides insights into dog adoptability based on location, breed, and name. These trends help rescues, shelters, and other adoption organizations understand the dogs in their care, making informed decisions to maximize their shot at a forever home! 

## Movement 

Dogs’ locations play a large role in their chances for adoption, which means that states move dogs around to give them their best shot at a new life. Some states tend to import dogs from outside locations, while others look more consistently to relocate their adoptable dogs elsewhere.

```{r, fig.alt = "An interactive leaflet map of the united states that demonstrates the flow of dogs. Darker purpler states are matched up with more negative numbers indicating dogs flowing out of state while lighter yellower states are matched up with positive numbers indicating adoptable dogs flowing into state. The only state that is dark purple is Texas, which exported 635 dogs out of state, while the most yellow states are New York and Washington, which import around 350 dogs each.", fig.cap = "*Net flow of dogs in and out states*"}
#Mapping export and import of dogs by state. 

#Prepping Location data for interactive mapping 
location_data <- location_data %>%
  filter(inUS == "True") %>%
  mutate(diff = imported - exported) %>%
  mutate(diff = as.numeric(diff))

#Get county geometries using tigris
states <- states(cb = TRUE) %>% 
  transmute(location = toupper(NAME)) %>%
  mutate(location = str_to_lower(location))  

#Joining Data 
dog_states <- states %>% 
  inner_join(location_data)

#Setting color palette
pal <- colorNumeric(
  palette = "viridis",
  domain = dog_states$diff)

#Setting Labels for hovering
stateLabels <- sprintf('<b>%s</b><br/>%g dogs',
                       dog_states$location, dog_states$diff) %>%
  lapply(function(x) HTML(x))

dog_states <- cbind(dog_states, matrix(stateLabels, ncol = 1, dimnames = list(c(), c('stateLabels'))))

#Map!
leaflet(dog_states) %>%
  addTiles() %>% 
  setView(lng = -96.25, lat = 39.50, zoom = 3.5) %>% 
  addPolygons(color = 'white',
              weight = 1,
              smoothFactor = .3,
              fillOpacity = .75,
              fillColor = ~pal(dog_states$diff),  #Assigns the chloropleth values 
              label = ~stateLabels,               #Creates the labels when hovering
              labelOptions = labelOptions(
                style = list(color = 'gray30'),
                textsize = '10px'),
              highlightOptions = highlightOptions( #Creates the highlight when hovering over it 
                weight = 3,
                color = 'dodgerblue')) %>% 
  addLegend(pal = pal, values = dog_states$diff,  #Creates the legend 
            title = 'Dogs Exported vs Imported',
            position = 'bottomleft')
```
\
Texas clearly *exports* the largest number of dogs, while Washington and New York *import* the most, highlighting a flow of dogs. However, among states that import dogs, space availability and adoption demand varies. To learn more, we looked at the percentage of each state’s adoptable dog population that was imported.

```{r, fig.alt = "A map of the lower 48 states, demonstrating the percent of dogs imported out of the total in each state. Bright yellow is around 25% of the total dogs are imported while dark purple is 0% of the dogs are imported. Only Washington is a bright yellow, however, almost the entire east coast is a blueish green, as well as a couple states in the midwest, oregon and utah. This indicates that those states import around 10-20% of their dogs."}
#Mapping percent of dogs imported by state 

#Gather State Boundaries and Coordinates for Map
states_map <- map_data("state")

#Map
location_data %>%
  mutate(percent_import = imported/total * 100) %>% #Creates a column with percent imported of total dogs by state 
  arrange(desc(percent_import)) %>%
  ggplot(aes(map_id = location, fill = percent_import)) + 
  geom_map(map = states_map) + 
  expand_limits(x = states_map$long, y = states_map$lat) + 
  theme_map() + 
  labs(title = "Percent of Total Dogs Imported", fill = "Percent") + 
  scale_fill_viridis_c() 
```
\
25% of Washington’s total dogs are imported, while in New York, only 10% are imported. Although New York imports the highest number of dogs, Washington’s higher importation percentage shows higher demand for adoptable dogs and, therefore, a better chance at adoption! The East Coast, the Midwest, and the Northwest Coast are the best places for rescues to send dogs. This is likely because those areas have fewer strays due to higher population density and colder temperatures. These factors make the area inhospitable and result in fewer local dogs in kennels and up for adoption, creating a dog demand. However, future pet parents in these states might wonder where their dog came from! To find out more, we explored data on which states export dogs the most.

```{r fig.alt = "A map of the lower 48 states demonstrating the percent of the total dogs in state from the data set exported. Purple is 0 dogs exported while yellow is around 50%.  Texas is a large outlier, bright yellow, and has exported over 50% of their dogs. A couple of other states in the south are a lightish purple indicating that they export 10-20% of their dogs. This demonstrates a tend of dog export out of the south."}
#Mapping percent of dogs exported by state 

#Map
location_data %>%
  mutate(total_in_state = total - imported) %>% #Remove amount imported from the total
  mutate(total_w_exported = total + exported) %>% #Add amount exported to get new total before dogs were moved 
  mutate(percent_export = exported/total_w_exported * 100) %>% #Calculate the percent of total dogs that we exported by state
  arrange(desc(percent_export)) %>%
  ggplot(aes(map_id = location, fill = percent_export)) + 
  geom_map(map = states_map) + #Uses same boundaries/state map defined in last code chunk 
  expand_limits(x = states_map$long, y = states_map$lat) + 
  theme_map() + 
  labs(title = "Percent of Total Dogs Exported", fill = "Percent") + 
  scale_fill_viridis_c() 
```
\
Texas exports the most dogs, with around 50% of their total adoptable population leaving the state. However, a few other southern states have a lighter color, indicating a high percentage of exported dogs. Possibly due to the warmer weather and more rural areas, these states provide ideal habitats for strays to proliferate. Kennels can be easily overwhelmed by large numbers of dogs. By exporting their animals, these states can send dogs to places with less competition and higher chances of finding a good home. 

## Breed 

Some potential dog adopters might be looking for a specific breed - a loyal Pit Bull Terrier, a smart German Shepherd, or a good-natured Labrador. No matter what type of dog a family hopes to find, data on top adoptable breeds and their location can help inform that decision. On Petfinder, rescues and shelters can list a primary breed on each dog’s profile. Even for mixed breed dogs, some organizations list an identifiable primary breed if possible.

```{r, fig.alt = "A bar graph demonstrating the 10 most common breeds that are up for adoption. Each of the 10 breeds has 3 bars, one detailing the total number of that breed up for adoption, the total number of purebred of that breed, followed by the number of mixed breed of that breed. The most common dog given up for adoption is pit bull terriers, with nearly 3000 out of 8000 being purebred. Then labrador retreiver, followed by chihuahua, german shepard, boxer, american staffordshire terrier, beagle, american bulldog, and australian cattle dog. Each of the other breeds given up are around 1/3 to 1/4 purebred, the rest being mixedbred.", fig.cap = "*Mixed vs Purebred breakdown in popular adoptable dogs.*"}
#Bar graph of the top 10 most adoptable dog breeds and what amount are mixed vs purebred 

# Create new dataset to store number of mixed, purebred, and total dogs per breed
breeds_count <- description_data_clean_breeds %>% 
  mutate(breed_mixed = str_replace(breed_mixed, "False", "Purebred")) %>%   #Change "True" / "False" values in breed_mixed to "Mixed" / "Purebred"
  mutate(breed_mixed = str_replace(breed_mixed, "True", "Mixed")) %>% 
  
  #Count the number of mixed and purebred dogs within each primary breed
  count(breed_primary, breed_mixed) %>% 
  pivot_wider(names_from = breed_mixed,
              values_from = n) %>%   #Store mixed and purebred dogs of the same primary breed as separate observations
  mutate(Total = Mixed + Purebred) %>%  #Count total number of dogs in a breed
  filter(Total >= 819) %>% #Keep only the 10 breeds with the most total dogs
  pivot_longer(cols = -c(breed_primary), 
                names_to = "Mix",
                values_to = "n") %>%  #Separate observations of mixed dogs, purebred dogs, and total within a breed
  mutate_all(~replace(., is.na(.), 0)) %>%  #Change NA values to 0
  mutate(Mix = fct_relevel(Mix, c("Total", "Mixed", "Purebred"))) %>%  #Set meaningful order - Total, Mixed, Purebred
  mutate(breed_primary = fct_reorder(breed_primary, n, .fun = "sum", .desc = TRUE)) #Reorder breeds by number of total dogs

#Set a color-blind friendly pallette
my_palette <- c('#440154', '#21908C', '#FDE725')


#Create the interactive bar plot
p <- plot_ly(
  breeds_count,
  type = "bar",
  x = ~breed_primary,
  y = ~n, 
  color = ~Mix,
  colors = my_palette,
  #Set the variable labels within the popups and the axis/legend labels
  hovertemplate = paste('Primary Breed: %{x}', '<br>Count: %{y}')) %>% 
    layout(xaxis = list(title = 'Primary Breed'), 
           yaxis = list(title = 'Number of Dogs'), legend = list(title=list(text='<b> Mixed Breed? </b>')))


plotly::ggplotly(p) 
```
\
Dog lovers might be unsurprised to see that among these adoptable dogs, Pit Bull Terriers appear the most. Sadly, Pit Bulls’ reputation for aggression makes owners more likely to give them up (often due to training issues) and less likely to adopt one. These misunderstood dogs in particular are looking for loving homes equipped to meet their needs!

Shelters and rescues are also full of mixed-breed dogs. Across all 10 most common breeds, more mixed dogs went up for adoption compared to purebred dogs. Why? On the streets, homeless or unattended dogs mate randomly, producing mixed-breed puppies. However, rescues are more likely to find mixed-breed Labradors, for example, than pit mixes: 5312 (or 67.89%) of Pit Bulls in the dataset are mixed, while 6103 (or 85.27%) of Labradors are mixed.  

```{r}
#Among the top 10 most common primary breeds the percent of dogs that are mixed breed vs. purebred 

#Create variable `total` for number of dogs represented in each primary breed
description_data_clean_total <- breeds_count %>% 
  filter(Mix != "Total") %>% #Don't count up total in addition to mixed + primary
  group_by(breed_primary) %>% 
  summarize(total = sum(n))

#Calculate what % of total dogs in each breed are purebred
percent_purebred <- breeds_count %>% 
  left_join(description_data_clean_total) %>% 
  filter(Mix == "Purebred") %>% 
  mutate(percent_purebred = (n/total) * 100) %>% 
  select(breed_primary, percent_purebred)

#Calculate what % of total dogs in each breed are mixed; store all % variables together
percents <- breeds_count %>% 
  left_join(description_data_clean_total) %>% 
  filter(Mix == "Mixed") %>% 
  mutate(percent_mixed = (n/total) * 100) %>%
  select(-Mix, -n) %>% 
  left_join(percent_purebred)

#Which primary breeds have the highest % of mixed dogs?
percents %>% 
  arrange(desc(percent_mixed))

#Which primary breeds have the highest % of purebred dogs?
percents %>% 
  arrange(desc(percent_purebred))
```

```{r,  collapse = FALSE, fig.alt = "A table demonstrating the top 9 breeds organized based on what percent of the total dogs was of mixed breed. The dog that was most commonly mixed was Labrador Retrieveer with around 85%, folled by Boxers at 84%, American Bulldogs at 77%, Australian Cattle Dogs at 77% as well, American Staffordshire Terrier, Pit Bull Terrier, Beagle, Chihuahua and German Shepherd. The table also has a column that tells you what percent of the total is purebred, which is essentially 100% minus the percent mixed. This makes it so that German Shepherds are the most commonly purebred dog up for adoption, followed by Chihuahuas and Beagles."}

#Print out the data set
kable(percents %>% 
  arrange(desc(percent_mixed))) #Arrange by breed with largest percent mixed. 
```
\
Location also impacts the types of dogs a future pet-parent might encounter on Petfinder. In most states, Pit Bull Terriers or Labrador Retrievers represent the most common adoptable breeds. However, one might find more Huskies in Alaska, more Catahoula Leopard Dogs in Hawai’i, more Chihuahuas in Nebraska, or more Border Collies in Oregon. In Montana, Pit Bull Terriers and American Staffordshire Terriers are tied as the most common breeds available on Petfinder. These state-level differences might reflect different dogs’ climate needs - for example, Catahoula Leopard Dogs thrive in warm places like Hawai’i, while Huskies like the cold in Alaska.

```{r}
#Find the Most popular breed by state 

#Identify the most popular breed in each state
state_max <- description_data_clean_breeds %>% 
  filter(contact_country == "US") %>% #Keep only dogs adoptable in the US
  select(id, breed_primary, contact_state) %>%  #Keep only the relevant columns
  count(contact_state, breed_primary) %>% #Count number of dogs of each breed in each state
  group_by(contact_state) %>% 
  summarize(max(n))  #Keep only the most common breed from each state

#Count the number of dogs represented in each state's most popular breed
top_breeds_state <- description_data_clean_breeds %>% 
  select(id, breed_primary, contact_state) %>% #Keep only the relevant columns
  count(contact_state, breed_primary) %>% #Count number of dogs of each breed in each state
  inner_join(state_max) %>% #Join data on the number of dogs in that state's most common breed
  group_by(contact_state) %>% 
  filter(n == max(n)) %>% #Keep only the top breed from each state
  mutate(count = n) %>% 
  select(contact_state, breed_primary, count)

#Wrangle data on state boundaries and top breeds
#Prepare for mapping
states <- states(cb = TRUE) %>% 
  transmute(region = toupper(NAME)) %>%
  mutate(region = str_to_lower(region)) 

#Joining data 
top_breeds_state <- top_breeds_state %>% 
  mutate(region = contact_state)

#Create dataset to store state geometry and top breed
breed_state_geography <- states %>% 
  inner_join(top_breeds_state)
```

```{r warning = FALSE, fig.cap = "*Interactive map of top adoptable dog breed by state*", fig.alt = "An interactive map where states are colored to represent their most common adoptable dog breed. Almost all of the contiguous states have either pit bull terriers or American staffordshire terriers as the top breed, while Alaska has huskies and Hawaii has Catahoula leopard dogs."}
#Map the top adoptable breed by state

#Setting colorblind-friendly palette
pal <- colorFactor(
  palette = "viridis",
  domain = breed_state_geography$breed_primary)

#Setting label text for hovering
stateLabels <- sprintf('<b>%s</b><br/><b>Top Breed: </b> %s',
                       breed_state_geography$region, breed_state_geography$breed_primary) %>%
  lapply(function(x) HTML(x))

breed_state_geography <- cbind(breed_state_geography, matrix(stateLabels, ncol = 1, dimnames = list(c(), c('stateLabels'))))

#Create map
leaflet(breed_state_geography) %>%
  addTiles() %>% 
  setView(lng = -96.25, lat = 39.50, zoom = 3.5) %>% 
  addPolygons(color = 'white',
              weight = 1,
              smoothFactor = .3,
              fillOpacity = .75,
              fillColor = ~pal(breed_state_geography$breed_primary),  #Assign choropleth fill color values 
              label = ~stateLabels,       #Show labels when hovering
              labelOptions = labelOptions(
                style = list(color = 'gray30'),
                textsize = '10px'),
              highlightOptions = highlightOptions( #Highlight a state when hovering over it 
                weight = 3,
                color = 'dodgerblue')) %>% 
  addLegend(pal = pal, values = breed_state_geography$breed_primary,  #Create the legend 
            title = 'Top Breed',
            position = 'bottomleft')
```


## Name 

Beyond breed and location, a dog’s name might attract or dissuade potential adopters.

```{r, fig.alt = "A word cloud displaying the top 25 most popular dogs names. Bella is the most popular by a large margin, followed by Buddy, Max and Daisy. The remaining names in no particular order are maggie, ginger, cooper, zeus, lola, sadie, luna, rocky, stella, coco, molly, lady, jack, lucy, bear, duke, charlie, rosie, buster, bailey, and princess.", fig.cap = "Word cloud demonstrating the 25 most popular names"}
#Most popular dog names 

#Prepare code for wordcloud 
wordcloud_plot_df <- description_data_clean_names %>%
  group_by(name) %>%
  summarize(n = n())

#Wordcloud
wordcloud(words = wordcloud_plot_df$name, 
          freq = wordcloud_plot_df$n, 
          min.freq = 100, 
          scale=c(4,0.5), 
          random.order=FALSE, 
          colors=viridis(15)
          )
```
\
In our data set, certain names are clearly more popular than others. Overall, “Bella” is the most popular name at 257 entries, while “Buddy” and “Max” follow behind at 203 and 202, respectively. However, name popularity differs by breed and location depending on people’s preferences or perception of the breed.   

```{r}
#Most popular names by Breed 

#Most popular names for pitbulls 
pit <- description_data_clean_names %>%
  filter(str_detect(breed_primary, "Pit")) %>%
  group_by(name) %>%
  summarize(total = n()) %>%
  arrange(desc(total)) %>%
  head(3) %>%
  mutate(breed = "Pit Bull Terrier")

#Most popular names for labs 
lab <- description_data_clean_names %>%
  filter(str_detect(breed_primary, "Lab")) %>%
  group_by(name) %>%
  summarize(total = n()) %>%
  arrange(desc(total)) %>%
  head(3) %>%
  mutate(breed = "Labrador Retriever")

#Most popular names for chihuahuas 
chi <- description_data_clean_names %>%
  filter(str_detect(breed_primary, "Chihuahua")) %>%
  group_by(name) %>%
  summarize(total = n()) %>%
  arrange(desc(total)) %>%
  head(3) %>%
  mutate(breed = "Chihuahua")

#Combine into one data set 
breed_name1 <- pit %>%
  full_join(lab)

breed_name2 <- breed_name1 %>%
  full_join(chi)

breed_name <- breed_name2 %>%
  select(breed, name, total) 
```

```{r, collapse = FALSE, fig.alt = "A table demonstrating the top 3 names of the most popular dog breeds. It gives the breed of the dog, the name and total number of dogs in that breed with that name. Bella is the most populat name for Pit bull terriers, the 3rd most popular name for labrador retrievers and second more popular name for Chihuahuas. Pit Bulls are also commonly called Diamond and Zues, Labrador Retrievers Duke and Charlie, and Chihuahuas Coco and Peanut."}
#Print data set with 3 most popular names for the most popular breeds. 
kable(breed_name)
```
\
For example, this table shows the top three most popular names according to breed. Only the three most common breeds (Pit Bull Terriers, Labrador Retrievers, and Chihuahuas) are included. Bella is in the top three for all breeds, demonstrating its popularity. Besides that, each breed has distinct popular names to reflect their unique demeanors. So if a rescue Chihuahua is named “Coco,” it certainly won’t be the only one!

Names not only vary by breed but by location as well. The map below shows the most popular dog name in each state. There appears to be similar naming practices along the East Coast, with three states' most popular names being Max. There is also cohesion among the Great Plains states and the upper Midwest, with Bella being the dominating name.  

```{r}
#Popular names by Location
#Change state names to lowercase spelled out
state_abbr_to_full <- data.frame(
  abbr = state.abb, 
  full_name = state.name, 
  stringsAsFactors = FALSE)

#Prepare name info for visualization 
names_pop_state <- description_data_clean_names %>%
  left_join(state_abbr_to_full, by = c("contact_state" = "abbr")) %>%
  mutate(contact_state = full_name) %>%
  select(-full_name) %>%
  mutate(contact_state = str_to_lower(contact_state)) %>%
  group_by(contact_state, name) %>%
  count() %>%
  arrange(desc(n))%>%
  group_by(contact_state) %>%
  slice_max(order_by = n, n = 1, with_ties = FALSE) %>%
  rename(total_dogs = n)
```

```{r, fig.alt = "Map detailing the most popular name for each state in the lower 48 states in the U.S. There are 27 different names, meaning that there is a lot of variation from state to state. However names like Max and Bella are extremely popular. Max is especially popular in the northeast and Bella is popular in the midwest."}
#Mapping Name by State 
#Merge map info with name info
merged_data <- states_map %>%
  full_join(names_pop_state, by = c("region" = "contact_state"))

#Make the map 
ggplot(data = merged_data, aes(map_id = region, fill = name)) + 
  geom_map(map = states_map, color = "white") + 
  expand_limits(x = states_map$long, y = states_map$lat) + 
  labs(title = "Most Popular Name by State", fill = "Name") + 
  scale_fill_viridis_d() +
  theme_map() + 
  theme(
    legend.key.size = unit(0.3, "cm"),
    legend.text = element_text(size = 6),
    legend.title = element_text(size = 6))
```
\
In order to provide a bit more detail a table has been included below that lists the state, dog name, and number of dogs with that name in that location. A few states, such as Montana and South Dakota, have no repeating names, so only the first dog, alphabetically, is listed. As one could expect, popular names like Bella, Luna, Duke, and Buddy appear often. There are also some interesting outliers that did not appear in the previous investigations; 7 Beaus in Colorado, 3 Ravens in Delaware, and 4 Athenas in New Mexico are a few.

```{r, collapse = FALSE, fig.alt = "Data table detailing the most popular name by state and the number of dogs in that state with that name. As noted for the map names like Bella and Max show up as the top name for a number of different states."}
kable(head(names_pop_state))
```

## Conclusion

Clearly many different factors play a role in getting a dog from the streets to their perfect home. Notably, though, this information represents just a single day adoptable dogs were posted in 2019. It offers only a glimpse into a complex process of pet rehoming. Regardless, we hope that shelters and rescue organizations can look to these insights when deciding how to move and name various breeds in their care. With luck, these trends will also inform hopeful adopters where dogs come from and what dogs are available in their area!

