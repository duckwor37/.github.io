---
title: "Tree Growth and Avalanches"
date: "2025-05-07"
author: "Tori Duckworth"
format:
  html:
    toc: true
    toc-depth: 2
    embed-resources: true
---

# Downloading Data & Packages
```{r include = FALSE}
library(ggplot2)
library(dplyr)
library(readr)
library(tidyverse)
library(viridis)
library(moments)
library(car)
library(DHARMa)
library(ggpubr)
library(rstatix)
library(dunn.test)
library(glmm)
library(lme4)
library(lmerTest)

Raw_tree_data <- read.csv("Tree_Growth_Post_Avalanche.csv")
```

```{r}
Raw_tree_data <- Raw_tree_data %>%
  mutate(average.density.per.tree = (distance.from.NE.m + distance.from.SE.m + distance.from.SW.m + distance.from.NW.m)/4)
```


#Plots 

## Species diversity per plot
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  mutate(Tree.species = gsub("downy birch ", "downy birch", Tree.species)) %>%
  mutate(Tree.species = gsub("poplar", "", Tree.species)) %>%
  mutate(Tree.species = gsub(" \\(|\\)", "", Tree.species)) %>%
  ggplot(aes(x = Tree.area, fill = Tree.species)) + 
  geom_bar() + 
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D", direction = -1) + 
  labs(x = "Tree Area", y = "Number of Trees", fill = "Tree Species") 
```
```{r}
Select_data <- Raw_tree_data %>%
  select(Tree.area, Tree.species) 

contingency_table <- table(Area = Select_data$Tree.area, Species = Select_data$Tree.species) 

fisher.test(contingency_table)
```
N0 = No relationship exists between Tree Species and the Tree Area sampled 
N1 = A relationsihp exists between Tree species and the Tree Area sampled 

N1, a relationship does exist.


## Altered Branching 
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = Tree.area, fill = Altered.branching)) + 
  geom_bar() +  
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D") + 
  labs(title = "Altered Branching per Area", x = "Tree Area", y = "Number of Trees", fill = "Altered Branching") 
```
```{r}
Select_data <- Raw_tree_data %>%
  select(Tree.area, Altered.branching) 

contingency_table <- table(Select_data$Tree.area, Select_data$Altered.branching) 

fisher.test(contingency_table)
```

## Obvious Scarring 
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = Tree.area, fill = Obvious.scarring)) + 
  geom_bar() +  
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D") + 
  labs(title = "Scarring per Area", x = "Tree Area", y = "Number of Trees", fill = "Scarring") 
```
```{r}
Select_data <- Raw_tree_data %>%
  select(Tree.area, Obvious.scarring) 

contingency_table <- table(Select_data$Tree.area, Select_data$Obvious.scarring) 

fisher.test(contingency_table)
```


## Trunk Deformation
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = Tree.area, fill = Trunk.deformation)) + 
  geom_bar() +  
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D") + 
  labs(title = "Trunk Deformation per Area", x = "Tree Area", y = "Number of Trees", fill = "Trunk Deformation") 
```
```{r}
Select_data <- Raw_tree_data %>%
  select(Tree.area, Trunk.deformation) 

contingency_table <- table(Select_data$Tree.area, Select_data$Trunk.deformation) 

fisher.test(contingency_table)
pairwise_fisher_test(contingency_table)
```

## Density 
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = Tree.area, y = average.density.per.tree)) + 
  geom_boxplot() +  
  theme_minimal() + 
  labs(, x = "Tree Area", y = "Average Density per Tree (m)") 
```
```{r}
shapiro.test(Raw_tree_data$average.density.per.tree)
leveneTest(Raw_tree_data$average.density.per.tree, Raw_tree_data$Tree.area)

dunn.test(Raw_tree_data$average.density.per.tree, Raw_tree_data$Tree.area)
```
Can't use ANOVA because the data set didn't meet the assumption of normality under the Shapiro-wilks normality test, so using Kurskal-wallis test which doesn't assume normality. In this case it finds that there is a significant difference between the groups, but we don't know what groups. We then use the Dunn test to find between which groups is it significantly different, where we find that the density between BB and RC and GB and RC is statistically significant, however the difference 

## Dbh vs Tree.area
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = dbh.cm, fill = Tree.area)) + 
  facet_wrap(~ Tree.area) + 
  geom_density() + 
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D", direction = -1) + 
  labs(x = "Dbh (cm)", y = "Frequency", fill = "Tree Area")
```

#lme4 test
```{r}
Raw_tree_data$Tree.area.2 <- relevel(factor(Raw_tree_data$Tree.area), ref = "RC")
lmer.2 <- lmer(dbh.cm~ Tree.area.2 + (1|Estimated.tree.age) + (1|Tree.species), data = Raw_tree_data)
# extract coefficients
coefs.1 <- data.frame(coef(summary(lmer.2)))
# get Satterthwaite-approximated degrees of freedom
coefs.1$df.Satt <- coef(summary(lmer.2))[, 3]
# get approximate p-values
coefs.1$p.Satt <- coef(summary(lmer.2))[, 5]
coefs.1
summary(lmer.2)
```
```{r}
lmer.3 <- lmer(dbh.cm~ Tree.area + (1|Estimated.tree.age) + (1|Tree.species), data = Raw_tree_data)
# extract coefficients
coefs.3 <- data.frame(coef(summary(lmer.3)))
# get Satterthwaite-approximated degrees of freedom
coefs.3$df.Satt <- coef(summary(lmer.3))[, 3]
# get approximate p-values
coefs.3$p.Satt <- coef(summary(lmer.3))[, 5]
coefs.3
summary(lmer.3)
```


#Checking significants of just Area to dbh
```{r}
lin.model.dbh.area <- glm(dbh.cm ~ Tree.area.2, data = Raw_tree_data, family = gaussian)
print(summary(lin.model.dbh.area), show.residuals = TRUE)

hist(resid(lin.model.dbh.area))
plot(lin.model.dbh.area, which = 1)
qqPlot(resid(lin.model.dbh.area))
```


# Checking Tree species as confounder 
```{r}
Raw_tree_data$Tree.area.2 <- relevel(factor(Raw_tree_data$Tree.area), ref = "RC")
lin.model.dbh.species <- glm(dbh.cm ~ Tree.area.2 + Tree.species, data =  Raw_tree_data, family = gaussian(link = "1/mu^2"))
print(summary(lin.model.dbh.species), show.residuals = TRUE)

hist(resid(lin.model.dbh.species))
plot(lin.model.dbh.species, which = 1)
qqPlot(resid(lin.model.dbh.species))
```
In this case the q-q plot or a normal plot (3rd) demonstrates that this data fits the test of normality. However the residual plot demonstrates that it doesn't fit the assumption of variance of the residuals, this is further confirmed by the residual deviance number which is more than 19 times more than the degrees of freedom. So it was then transformed to fit the 

# Checking Estimated Tree age as confounder 
```{r}
lin.model.dbh.age <- glm(dbh.cm ~ Tree.area.2 + Estimated.tree.age, data =  Raw_tree_data, family = gaussian)
print(summary(lin.model.dbh.age), show.residuals = TRUE)

hist(resid(lin.model.dbh.age))
plot(lin.model.dbh.age, which = 1)
qqPlot(resid(lin.model.dbh.age))
```
In this case the q-q plot pretty much shows normality except for two values on either end on the graph, however the residuals graph shows and odd distribution, which is further confirmed by the residual deviance number which is once again about 14 times higher than the degrees of freedom. Although the histogram shows a pretty normal distribution. 

## Tree Area vs Height 
```{r}
Raw_tree_data %>%
  mutate(Tree.area = factor(Tree.area, labels = c("Frequently Hit", "Infrequently Hit", "Never Hit"))) %>%
  ggplot(aes(x = Height.m, fill = Tree.area)) + 
  facet_wrap(~ Tree.area) + 
  geom_density() + 
  theme_minimal() + 
  scale_fill_viridis(discrete = TRUE, option = "D", direction = -1) + 
  labs(x = "Tree Height (m)", y = "Frequency", fill = "Tree Area")
```

#lme4 test
```{r}
Raw_tree_data$Tree.area.2 <- relevel(factor(Raw_tree_data$Tree.area), ref = "RC")
lmer.1 <- lmer(Height.m ~ Tree.area.2 + (1|Estimated.tree.age) + (1|Tree.species), data = Raw_tree_data)
# extract coefficients
coefs.2 <- data.frame(coef(summary(lmer.1)))
# get Satterthwaite-approximated degrees of freedom
coefs.2$df.Satt <- coef(summary(lmer.1))[, 3]
# get approximate p-values
coefs.2$p.Satt <- coef(summary(lmer.1))[, 5]
coefs.2
summary(lmer.1)
```
```{r}
lmer.4 <- lmer(Height.m ~ Tree.area + (1|Estimated.tree.age) + (1|Tree.species), data = Raw_tree_data)
# extract coefficients
coefs.4 <- data.frame(coef(summary(lmer.4)))
# get Satterthwaite-approximated degrees of freedom
coefs.4$df.Satt <- coef(summary(lmer.4))[, 3]
# get approximate p-values
coefs.4$p.Satt <- coef(summary(lmer.4))[, 5]
coefs.4
summary(lmer.4)
```


#Checking significants of just Area to heights
```{r}
lin.model.height.area <- glm(Height.m ~ Tree.area.2, data = Raw_tree_data, family = gaussian)
print(summary(lin.model.dbh.area), show.residuals = TRUE)

hist(resid(lin.model.height.area))
plot(lin.model.height.area, which = 1)
qqPlot(resid(lin.model.height.area))
```

#Generalized linear model for tree.area, Tree Species and height
```{r}
lin.model <- glm(Height.m ~ Tree.area.2 + Tree.species, data =  Raw_tree_data, family = gaussian)
print(summary(lin.model), show.residuals = TRUE)

hist(resid(lin.model))
plot(lin.model, which = 1)
qqPlot(resid(lin.model))
```
Finds that when controlling age that the difference in height between the trees is non significant, however, it is significant for some age groups. All age groups besides 30-40 were statistically significant which could mean that age is the better predictor of height. 

#Generalized linear model for tree area, tree age, and height
```{r}
lin.model.2 <- glm(Height.m ~ Tree.area.2 + Estimated.tree.age + Tree.species, data =  Raw_tree_data, family = gaussian)
print(summary(lin.model.2), show.residuals = TRUE)

hist(resid(lin.model.2))
plot(lin.model.2, which = 1)
qqPlot(resid(lin.model.2))
```


## Averages
#Creating mode function
```{r}
mode <- function(x, na.rm = FALSE) {
  
  if(na.rm){#if na.rm is TRUE, remove NA values from input x
    x = x[!is.na(x)]
  }
  
  val <- unique(x)
  return(val[which.max(tabulate(match(x, val)))])
}
```


```{r}
Raw_tree_data %>%
  mutate(Estimated.tree.age = as.factor(Estimated.tree.age)) %>%
  group_by(Tree.area) %>%
  summarize(mean.height.m = mean(Height.m), mean.dbh.cm = mean(dbh.cm), mean.density.m = mean(average.density.per.tree), mean.age = mode(Estimated.tree.age))
```
